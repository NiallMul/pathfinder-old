/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this templa
 @Override
 public int getSize() {
 throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
 }

 @Override
 public E getElementAt(int index) {
 throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
 }

 @Override
 public void addListDataListener(ListDataListener l) {
 throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
 }

 @Override
 public void removeListDataListener(ListDataListener l) {
 throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
 }
 te file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.CharacterClassDAO;
import DAO.EquipmentDAO;
import DAO.RaceDAO;
import DAO.SpellDAO;
import DTO.ArmourEquipment;
import DTO.CharacterClass;
import DTO.Equipment;
import DTO.Race;
import DTO.Spells;
import DTO.WeaponEquipment;
import com.sun.glass.ui.Window;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Random;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

/**
 *
 * @author Megatronus
 */
public class RPGGUI extends javax.swing.JFrame {

    RaceDAO rDAO = new RaceDAO();
    EquipmentDAO eDAO = new EquipmentDAO();
    SpellDAO spDAO = new SpellDAO();
    CharacterClassDAO cClassDAO = new CharacterClassDAO();
    String features;
    ArrayList<String> raceNameList = rDAO.getRaceNames();
    ArrayList<String> classNameList = cClassDAO.getClassNames();
    ArrayList<Equipment> equipmentList = new ArrayList();
    ArrayList<String> typeList = eDAO.getEquipmentTypeNames();
    ArrayList<String> subtypeList = eDAO.getEquipmentSubtypeNames();
    ArrayList<WeaponEquipment> weaponBuyingList = null;
    ArrayList<ArmourEquipment> armourBuyingList = null;
    ArrayList<Equipment> goodsBuyingList = null;
    ArrayList<Spells> spellList = new ArrayList();

    /**
     * Creates new form RPGGUI
     */
    public RPGGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rpgFrame = new javax.swing.JInternalFrame();
        rpgOptionPane = new javax.swing.JTabbedPane();
        pathfinderPane = new javax.swing.JScrollPane();
        pathfinderOptionPane = new javax.swing.JTabbedPane();
        racePane = new javax.swing.JScrollPane();
        pathfinderRacePanel = new javax.swing.JPanel();
        chooseRaceLabel = new javax.swing.JLabel();
        raceSelectBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        raceDescArea = new javax.swing.JTextArea();
        raceDescLabel = new javax.swing.JLabel();
        physDescLabel = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        physicalDescArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        societyDescArea = new javax.swing.JTextArea();
        relationsDescLabel = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        relationsDescArea = new javax.swing.JTextArea();
        alignReligLabel = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        alignmentReligionDescArea = new javax.swing.JTextArea();
        adventurerDescLabel = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        adventurerDescArea = new javax.swing.JTextArea();
        mNameDescLabel = new javax.swing.JLabel();
        mNameTextField = new javax.swing.JTextField();
        fNameDescLabel = new javax.swing.JLabel();
        fNameTextField = new javax.swing.JTextField();
        racePicLabel = new javax.swing.JLabel();
        raceSkillsLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        raceSkillsArea = new javax.swing.JTextArea();
        classPane = new javax.swing.JScrollPane();
        pathfinderClassPane = new javax.swing.JPanel();
        classChoiceLabel = new javax.swing.JLabel();
        classSelectBox = new javax.swing.JComboBox();
        classAlignLabel = new javax.swing.JLabel();
        classAlignmentField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        classDescArea = new javax.swing.JTextArea();
        classRoleLabel = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        classRoleArea = new javax.swing.JTextArea();
        classSkillsLabel = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        classSkillsArea = new javax.swing.JTextArea();
        classHitLabel = new javax.swing.JLabel();
        classHitField = new javax.swing.JTextField();
        fPicLabel = new javax.swing.JLabel();
        mPicLabel = new javax.swing.JLabel();
        classFeaturesBttn = new javax.swing.JButton();
        characterCreationPane = new javax.swing.JScrollPane();
        characterCreationPanel = new javax.swing.JPanel();
        choosePlayerRaceLabel = new javax.swing.JLabel();
        choosePlayerRaceComboBox = new javax.swing.JComboBox();
        choosePlayerClassLabel = new javax.swing.JLabel();
        choosePlayerClassComboBox = new javax.swing.JComboBox();
        chooseGenderLabel = new javax.swing.JLabel();
        chooseGenderComboBox = new javax.swing.JComboBox();
        characterLabel = new javax.swing.JLabel();
        statsLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        strengthTextField = new javax.swing.JTextField();
        dexterityTextField = new javax.swing.JTextField();
        intelligenceTextField = new javax.swing.JTextField();
        constitutionTextField = new javax.swing.JTextField();
        wisdomTextField = new javax.swing.JTextField();
        charismaTextField = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        playerNameTextField = new javax.swing.JTextField();
        goldLabel = new javax.swing.JLabel();
        goldTextField = new javax.swing.JTextField();
        rNameButton = new javax.swing.JButton();
        statButton = new javax.swing.JButton();
        equipShopLabel = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        String[] colNames = {   "Name", "Cost"};
        Object[][] equipTable = new Object[equipmentList.size()][];
        int i = 0;
        for(Equipment e: equipmentList){
            equipTable[i] = e.toStringArray();
            i++;
        }
        itemTable = new javax.swing.JTable(equipTable,colNames);
        typeLabel = new javax.swing.JLabel();
        typeComboBox = new javax.swing.JComboBox();
        subtypeLabel = new javax.swing.JLabel();
        subtypeComboBox = new javax.swing.JComboBox();
        jScrollPane14 = new javax.swing.JScrollPane();
        itemBoughtTableGoods = new javax.swing.JTable();
        shopSortButton = new javax.swing.JButton();
        buyButton = new javax.swing.JButton();
        sellButton = new javax.swing.JButton();
        equipCatComboBox = new javax.swing.JComboBox();
        jScrollPane15 = new javax.swing.JScrollPane();
        itemBoughtTableWeapons = new javax.swing.JTable();
        jScrollPane16 = new javax.swing.JScrollPane();
        itemBoughtTableArmour = new javax.swing.JTable();
        subtypeLabel1 = new javax.swing.JLabel();
        subtypeLabel2 = new javax.swing.JLabel();
        subtypeLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        selectedSpellsLabel = new javax.swing.JLabel();
        addSpellButton = new javax.swing.JButton();
        removeSpellButton = new javax.swing.JButton();
        equipShopLabel1 = new javax.swing.JLabel();
        spellSchoolComboBox = new javax.swing.JComboBox();
        levelComboBox = new javax.swing.JComboBox();
        typeLabel1 = new javax.swing.JLabel();
        spellSortButton = new javax.swing.JButton();
        jScrollPane17 = new javax.swing.JScrollPane();
        Object[][] startSpellsList = new Object[equipmentList.size()][];
        i = 0;
        for(Equipment e: equipmentList){
            equipTable[i] = e.toStringArray();
            i++;
        }
        selectedSpellTable = new javax.swing.JTable(equipTable,colNames);
        jScrollPane18 = new javax.swing.JScrollPane();
        String[] spellColNames = {"spellName", "spellDesc"};
        Object[][] spellListTable = new Object[spellList.size()][];
        i = 0;
        for(Spells e: spellList){
            spellListTable[i] = e.toStringArray();
            i++;
        }
        spellTable = new javax.swing.JTable(spellListTable,spellColNames);
        jScrollPane2 = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        rpgFrame.setVisible(true);

        pathfinderRacePanel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pathfinderRacePanelFocusGained(evt);
            }
        });

        chooseRaceLabel.setText("Choose a race");

        raceSelectBox.setModel(new javax.swing.DefaultComboBoxModel(raceNameList.toArray()));
        raceSelectBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                raceSelectBoxActionPerformed(evt);
            }
        });

        raceDescArea.setColumns(20);
        raceDescArea.setLineWrap(true);
        raceDescArea.setRows(5);
        jScrollPane1.setViewportView(raceDescArea);

        raceDescLabel.setText("Race Description");

        physDescLabel.setText("Physical Description");

        physicalDescArea.setColumns(20);
        physicalDescArea.setLineWrap(true);
        physicalDescArea.setRows(5);
        jScrollPane5.setViewportView(physicalDescArea);

        jLabel1.setText("Society Description");

        societyDescArea.setColumns(20);
        societyDescArea.setLineWrap(true);
        societyDescArea.setRows(5);
        jScrollPane6.setViewportView(societyDescArea);

        relationsDescLabel.setText("Relations Description");

        relationsDescArea.setColumns(20);
        relationsDescArea.setLineWrap(true);
        relationsDescArea.setRows(5);
        jScrollPane7.setViewportView(relationsDescArea);

        alignReligLabel.setText("Alignment and Religion Description");

        alignmentReligionDescArea.setColumns(20);
        alignmentReligionDescArea.setLineWrap(true);
        alignmentReligionDescArea.setRows(5);
        jScrollPane8.setViewportView(alignmentReligionDescArea);

        adventurerDescLabel.setText("Adventurer Description");

        adventurerDescArea.setColumns(20);
        adventurerDescArea.setLineWrap(true);
        adventurerDescArea.setRows(5);
        jScrollPane9.setViewportView(adventurerDescArea);

        mNameDescLabel.setText("Male name examples");

        mNameTextField.setFocusable(false);

        fNameDescLabel.setText("Female name examples");
        fNameDescLabel.setMaximumSize(new java.awt.Dimension(120, 5));
        fNameDescLabel.setMinimumSize(new java.awt.Dimension(120, 5));
        fNameDescLabel.setName(""); // NOI18N
        fNameDescLabel.setPreferredSize(new java.awt.Dimension(120, 5));

        fNameTextField.setFocusable(false);

        raceSkillsLabel.setText("Race Skills:");

        raceSkillsArea.setColumns(20);
        raceSkillsArea.setLineWrap(true);
        raceSkillsArea.setRows(5);
        raceSkillsArea.setWrapStyleWord(true);
        jScrollPane4.setViewportView(raceSkillsArea);

        javax.swing.GroupLayout pathfinderRacePanelLayout = new javax.swing.GroupLayout(pathfinderRacePanel);
        pathfinderRacePanel.setLayout(pathfinderRacePanelLayout);
        pathfinderRacePanelLayout.setHorizontalGroup(
            pathfinderRacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pathfinderRacePanelLayout.createSequentialGroup()
                .addGroup(pathfinderRacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pathfinderRacePanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(chooseRaceLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(raceSelectBox, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pathfinderRacePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(raceSkillsLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pathfinderRacePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pathfinderRacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pathfinderRacePanelLayout.createSequentialGroup()
                        .addGroup(pathfinderRacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(raceDescLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addComponent(physDescLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5))
                        .addGap(26, 26, 26)
                        .addGroup(pathfinderRacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pathfinderRacePanelLayout.createSequentialGroup()
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE))
                            .addGroup(pathfinderRacePanelLayout.createSequentialGroup()
                                .addGroup(pathfinderRacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pathfinderRacePanelLayout.createSequentialGroup()
                                        .addGroup(pathfinderRacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jScrollPane6))
                                        .addGap(18, 18, 18))
                                    .addGroup(pathfinderRacePanelLayout.createSequentialGroup()
                                        .addComponent(relationsDescLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(74, 74, 74)))
                                .addGroup(pathfinderRacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pathfinderRacePanelLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(adventurerDescLabel)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 638, Short.MAX_VALUE)
                                    .addComponent(alignReligLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 638, Short.MAX_VALUE))))
                        .addGap(78, 78, 78)
                        .addComponent(racePicLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 686, Short.MAX_VALUE)
                        .addGap(87, 87, 87))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pathfinderRacePanelLayout.createSequentialGroup()
                        .addGroup(pathfinderRacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pathfinderRacePanelLayout.createSequentialGroup()
                                .addGroup(pathfinderRacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pathfinderRacePanelLayout.createSequentialGroup()
                                        .addComponent(mNameDescLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                                        .addGap(112, 112, 112))
                                    .addGroup(pathfinderRacePanelLayout.createSequentialGroup()
                                        .addComponent(mNameTextField)
                                        .addGap(26, 26, 26)))
                                .addGroup(pathfinderRacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fNameDescLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 741, Short.MAX_VALUE)
                                    .addComponent(fNameTextField))))
                        .addGap(584, 584, 584))))
        );
        pathfinderRacePanelLayout.setVerticalGroup(
            pathfinderRacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pathfinderRacePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pathfinderRacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(raceSelectBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chooseRaceLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pathfinderRacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(raceDescLabel)
                    .addComponent(jLabel1)
                    .addComponent(alignReligLabel))
                .addGap(10, 10, 10)
                .addGroup(pathfinderRacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pathfinderRacePanelLayout.createSequentialGroup()
                        .addGroup(pathfinderRacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pathfinderRacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pathfinderRacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(physDescLabel)
                                .addComponent(relationsDescLabel))
                            .addComponent(adventurerDescLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pathfinderRacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(racePicLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pathfinderRacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fNameDescLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mNameDescLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pathfinderRacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(raceSkillsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(2911, Short.MAX_VALUE))
        );

        racePane.setViewportView(pathfinderRacePanel);

        pathfinderOptionPane.addTab("Race", racePane);

        classChoiceLabel.setText("Choose a class");

        classSelectBox.setModel(new javax.swing.DefaultComboBoxModel(classNameList.toArray()));
        classSelectBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classSelectBoxActionPerformed(evt);
            }
        });

        classAlignLabel.setText("Alignment");

        jLabel2.setText("Class Description");

        classDescArea.setColumns(20);
        classDescArea.setLineWrap(true);
        classDescArea.setRows(5);
        classDescArea.setWrapStyleWord(true);
        jScrollPane3.setViewportView(classDescArea);

        classRoleLabel.setText("Class Role");

        classRoleArea.setColumns(20);
        classRoleArea.setLineWrap(true);
        classRoleArea.setRows(5);
        classRoleArea.setWrapStyleWord(true);
        jScrollPane10.setViewportView(classRoleArea);

        classSkillsLabel.setText("Class Skills");

        classSkillsArea.setColumns(20);
        classSkillsArea.setLineWrap(true);
        classSkillsArea.setRows(5);
        classSkillsArea.setWrapStyleWord(true);
        jScrollPane11.setViewportView(classSkillsArea);

        classHitLabel.setText("Class Hit Die");

        fPicLabel.setToolTipText("");

        classFeaturesBttn.setText("Class Features");
        classFeaturesBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classFeaturesBttnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pathfinderClassPaneLayout = new javax.swing.GroupLayout(pathfinderClassPane);
        pathfinderClassPane.setLayout(pathfinderClassPaneLayout);
        pathfinderClassPaneLayout.setHorizontalGroup(
            pathfinderClassPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pathfinderClassPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pathfinderClassPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pathfinderClassPaneLayout.createSequentialGroup()
                        .addGroup(pathfinderClassPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(classSkillsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pathfinderClassPaneLayout.createSequentialGroup()
                                .addGroup(pathfinderClassPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(pathfinderClassPaneLayout.createSequentialGroup()
                                        .addComponent(classChoiceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(classSelectBox, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(classAlignLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(classAlignmentField, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pathfinderClassPaneLayout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(104, 104, 104))
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pathfinderClassPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pathfinderClassPaneLayout.createSequentialGroup()
                                        .addComponent(classRoleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                                        .addGap(141, 141, 141))
                                    .addComponent(jScrollPane10)
                                    .addGroup(pathfinderClassPaneLayout.createSequentialGroup()
                                        .addComponent(classHitLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(classHitField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(87, 87, 87))
                    .addGroup(pathfinderClassPaneLayout.createSequentialGroup()
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(pathfinderClassPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pathfinderClassPaneLayout.createSequentialGroup()
                        .addComponent(mPicLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(fPicLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE))
                    .addComponent(classFeaturesBttn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(94, 94, 94))
        );
        pathfinderClassPaneLayout.setVerticalGroup(
            pathfinderClassPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pathfinderClassPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pathfinderClassPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(classChoiceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(classSelectBox, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(classAlignLabel)
                    .addComponent(classAlignmentField)
                    .addComponent(classHitLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(classHitField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(pathfinderClassPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(classRoleLabel))
                .addGroup(pathfinderClassPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pathfinderClassPaneLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pathfinderClassPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(classSkillsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pathfinderClassPaneLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(pathfinderClassPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mPicLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fPicLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(classFeaturesBttn)))
                .addGap(2663, 2663, 2663))
        );

        classPane.setViewportView(pathfinderClassPane);

        pathfinderOptionPane.addTab("Class", classPane);

        characterCreationPanel.setPreferredSize(new java.awt.Dimension(2015, 1750));

        choosePlayerRaceLabel.setText("Choose a race:");

        choosePlayerRaceComboBox.setModel(new javax.swing.DefaultComboBoxModel(raceNameList.toArray()));
        choosePlayerRaceComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choosePlayerRaceComboBoxActionPerformed(evt);
            }
        });

        choosePlayerClassLabel.setText("Choose a class:");

        choosePlayerClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(classNameList.toArray()));
        choosePlayerClassComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choosePlayerClassComboBoxActionPerformed(evt);
            }
        });

        chooseGenderLabel.setText("Choose a Gender:");

        chooseGenderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));
        chooseGenderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseGenderComboBoxActionPerformed(evt);
            }
        });

        statsLabel.setText("Player Stats");

        jLabel3.setText("Strength");

        jLabel4.setText("Dexterity");

        jLabel5.setText("Intelligence");

        jLabel6.setText("Constitution");

        jLabel7.setText("Wisdom");

        jLabel8.setText("Charisma");

        nameLabel.setText("Character Name:");

        goldLabel.setText("Gold");
        goldLabel.setToolTipText("");

        rNameButton.setText("Random");
        rNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rNameButtonActionPerformed(evt);
            }
        });

        statButton.setText("Generate");
        statButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statButtonActionPerformed(evt);
            }
        });

        equipShopLabel.setText("Equipment:");

        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        itemTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemTableMouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(itemTable);

        typeLabel.setText("Type:");
        typeLabel.setVisible(false);

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel(typeList.toArray()));
        typeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeComboBoxActionPerformed(evt);
            }
        });
        typeComboBox.setVisible(false);

        subtypeLabel.setText("Subtype:");
        subtypeLabel.setVisible(false);

        subtypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(subtypeList.toArray()));
        subtypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subtypeComboBoxActionPerformed(evt);
            }
        });
        subtypeComboBox.setVisible(false);

        jScrollPane14.setViewportView(itemBoughtTableGoods);

        shopSortButton.setText("Sort by both");
        shopSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shopSortButtonActionPerformed(evt);
            }
        });
        shopSortButton.setVisible(false);

        buyButton.setText(">>");
        buyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyButtonActionPerformed(evt);
            }
        });

        sellButton.setText("<<");
        sellButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellButtonActionPerformed(evt);
            }
        });

        equipCatComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Goods", "Armour", "Weapons" }));
        equipCatComboBox.setSelectedIndex(-1);
        equipCatComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                equipCatComboBoxItemStateChanged(evt);
            }
        });
        equipCatComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equipCatComboBoxActionPerformed(evt);
            }
        });

        jScrollPane15.setViewportView(itemBoughtTableWeapons);

        jScrollPane16.setViewportView(itemBoughtTableArmour);

        subtypeLabel1.setText("Weapons");
        subtypeLabel.setVisible(false);

        subtypeLabel2.setText("Armour");
        subtypeLabel.setVisible(false);

        subtypeLabel3.setText("Goods");
        subtypeLabel.setVisible(false);

        jLabel9.setText("Select starting spells");

        selectedSpellsLabel.setText("Select starting spells");

        addSpellButton.setText("Add");

        removeSpellButton.setText("Remove");

        equipShopLabel1.setText("School:");

        spellSchoolComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                spellSchoolComboBoxItemStateChanged(evt);
            }
        });
        spellSchoolComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spellSchoolComboBoxActionPerformed(evt);
            }
        });

        levelComboBox.setModel(new javax.swing.DefaultComboBoxModel(typeList.toArray()));
        levelComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                levelComboBoxActionPerformed(evt);
            }
        });
        typeComboBox.setVisible(false);

        typeLabel1.setText("Level:");
        typeLabel.setVisible(false);

        spellSortButton.setText("Sort by both");
        spellSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spellSortButtonActionPerformed(evt);
            }
        });
        shopSortButton.setVisible(false);

        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        selectedSpellTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        selectedSpellTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectedSpellTableMouseClicked(evt);
            }
        });
        jScrollPane17.setViewportView(selectedSpellTable);

        spellTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        spellTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        spellTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                spellTableMouseClicked(evt);
            }
        });
        jScrollPane18.setViewportView(spellTable);

        javax.swing.GroupLayout characterCreationPanelLayout = new javax.swing.GroupLayout(characterCreationPanel);
        characterCreationPanel.setLayout(characterCreationPanelLayout);
        characterCreationPanelLayout.setHorizontalGroup(
            characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(characterCreationPanelLayout.createSequentialGroup()
                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 686, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sellButton, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                                    .addComponent(buyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(668, 668, 668))
                    .addGroup(characterCreationPanelLayout.createSequentialGroup()
                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(chooseGenderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(choosePlayerRaceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(choosePlayerRaceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chooseGenderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                        .addComponent(statsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(525, 525, 525))
                                    .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(playerNameTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(nameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rNameButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(409, 409, 409))
                                    .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(strengthTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(dexterityTextField))
                                        .addGap(18, 18, 18)
                                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(intelligenceTextField)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(constitutionTextField))
                                        .addGap(18, 18, 18)
                                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(wisdomTextField))
                                        .addGap(18, 18, 18)
                                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(charismaTextField))
                                        .addGap(18, 18, 18)
                                        .addComponent(statButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                                .addComponent(choosePlayerClassLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(choosePlayerClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(goldTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(goldLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                                .addComponent(equipShopLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(equipCatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(typeLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(subtypeLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(subtypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(shopSortButton)))
                                        .addGap(154, 154, 154)
                                        .addComponent(subtypeLabel1)
                                        .addGap(165, 165, 165)
                                        .addComponent(subtypeLabel2)
                                        .addGap(157, 157, 157)
                                        .addComponent(subtypeLabel3)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(10, 10, 10)))
                        .addComponent(characterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(474, 474, 474))
                    .addGroup(characterCreationPanelLayout.createSequentialGroup()
                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                .addComponent(equipShopLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spellSchoolComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(typeLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(levelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spellSortButton))
                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addSpellButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(removeSpellButton))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectedSpellsLabel)
                            .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        characterCreationPanelLayout.setVerticalGroup(
            characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(characterCreationPanelLayout.createSequentialGroup()
                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chooseGenderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chooseGenderComboBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(choosePlayerRaceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(choosePlayerRaceComboBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(choosePlayerClassLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(choosePlayerClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(playerNameTextField))
                            .addComponent(rNameButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(statsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(statButton)
                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(strengthTextField)
                                    .addComponent(dexterityTextField)
                                    .addComponent(intelligenceTextField)
                                    .addComponent(constitutionTextField)
                                    .addComponent(wisdomTextField)
                                    .addComponent(charismaTextField))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(goldLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(goldTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(equipShopLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(typeLabel)
                            .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subtypeLabel)
                            .addComponent(subtypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(shopSortButton)
                            .addComponent(equipCatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subtypeLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subtypeLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subtypeLabel1)))
                    .addGroup(characterCreationPanelLayout.createSequentialGroup()
                        .addComponent(characterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(characterCreationPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4595, 4595, 4595))
                    .addGroup(characterCreationPanelLayout.createSequentialGroup()
                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(buyButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sellButton))
                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                                    .addComponent(jScrollPane15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(jScrollPane13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel9)))
                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(selectedSpellsLabel)
                                .addGap(3, 3, 3))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, characterCreationPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(equipShopLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(typeLabel1)
                                    .addComponent(levelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spellSortButton)
                                    .addComponent(spellSchoolComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(characterCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(characterCreationPanelLayout.createSequentialGroup()
                                .addComponent(addSpellButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(removeSpellButton))
                            .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        intelligenceTextField.getAccessibleContext().setAccessibleName("");
        selectedSpellsLabel.getAccessibleContext().setAccessibleName("Selected starting spells");

        characterCreationPane.setViewportView(characterCreationPanel);

        pathfinderOptionPane.addTab("Character Creator", characterCreationPane);

        pathfinderPane.setViewportView(pathfinderOptionPane);

        rpgOptionPane.addTab("Pathfinder", pathfinderPane);
        rpgOptionPane.addTab("Pathfinder", jScrollPane2);

        javax.swing.GroupLayout rpgFrameLayout = new javax.swing.GroupLayout(rpgFrame.getContentPane());
        rpgFrame.getContentPane().setLayout(rpgFrameLayout);
        rpgFrameLayout.setHorizontalGroup(
            rpgFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rpgOptionPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1987, Short.MAX_VALUE)
        );
        rpgFrameLayout.setVerticalGroup(
            rpgFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rpgOptionPane, javax.swing.GroupLayout.DEFAULT_SIZE, 2789, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rpgFrame)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rpgFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pathfinderRacePanelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pathfinderRacePanelFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_pathfinderRacePanelFocusGained
    /**
     * Listener for when a race is selected from the combo box on the race page
     * of the application once selected the application retrieves and displays
     * all relevant information regarding the race to the user
     *
     * @param evt combobox named raceSelectBox is accessed and an element within
     * it is chosen
     *
     */
    private void raceSelectBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_raceSelectBoxActionPerformed
        // TODO add your handling code here:
        String name = raceSelectBox.getSelectedItem().toString();
        Race race = rDAO.getRace(name);
        raceDescArea.setText(race.getRaceDesc());
        physicalDescArea.setText(race.getPhysicalDesc());
        societyDescArea.setText(race.getSocietyDesc());
        relationsDescArea.setText(race.getRelationsDesc());
        alignmentReligionDescArea.setText(race.getAlignmentReligionDesc());
        adventurerDescArea.setText(race.getAdventurerDesc());
        mNameTextField.setText(race.getmNamesDesc());
        fNameTextField.setText(race.getfNamesDesc());
        raceSkillsArea.setText(race.getRaceSkills());
        Icon image = setPicLabel("..\\RPGProgram\\src\\Race\\image\\" + race.getName().toLowerCase() + ".jpg");

        racePicLabel.setIcon(image);

    }//GEN-LAST:event_raceSelectBoxActionPerformed

    /**
     *
     * @param evt
     */
    private void classSelectBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classSelectBoxActionPerformed
        // TODO add your handling code here:
        String name = classSelectBox.getSelectedItem().toString();
        CharacterClass cClass = cClassDAO.getClass(name);
        classDescArea.setText(cClass.getDesc());
        classRoleArea.setText(cClass.getRole());
        classAlignmentField.setText(cClass.getAlignment());
        classHitField.setText(cClass.getHitDie());
        classSkillsArea.setText(cClass.getSkills());
        features = cClass.getFeatures();
        Icon mImage = setPicLabel("..\\RPGProgram\\src\\Classes\\image\\m" + cClass.getName().toLowerCase() + ".jpg");
        mPicLabel.setIcon(mImage);
        Icon fImage = setPicLabel("..\\RPGProgram\\src\\Classes\\image\\f" + cClass.getName().toLowerCase() + ".jpg");
        fPicLabel.setIcon(fImage);
    }//GEN-LAST:event_classSelectBoxActionPerformed

    private void classFeaturesBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classFeaturesBttnActionPerformed
        // TODO add your handling code here:
        String[] classFeatures = features.split("\\.");
        features = "";
        for (String s : classFeatures) {
            features += s + "\n";
        }
        JTextArea classFeaturesArea = new JTextArea(features);
        JScrollPane featuresPane = new JScrollPane(classFeaturesArea);
        classFeaturesArea.setLineWrap(true);
        classFeaturesArea.setWrapStyleWord(true);
        featuresPane.setPreferredSize(new Dimension(800, 500));
        JOptionPane.showMessageDialog(classPane, featuresPane, "Class Features", JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_classFeaturesBttnActionPerformed

    private void equipCatComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equipCatComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_equipCatComboBoxActionPerformed

    private void equipCatComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_equipCatComboBoxItemStateChanged
        // TODO add your handling code here:
        if (equipCatComboBox.getSelectedItem().toString().equalsIgnoreCase("Goods")) {
            equipmentList = eDAO.getEquipmentByType("Goods");
            Object[][] equipTable = new Object[equipmentList.size()][];
            int i = 0;
            for (Equipment e : equipmentList) {
                equipTable[i] = e.toStringArray();
                i++;
            }
            itemTable = new javax.swing.JTable(equipTable, colNames);
            jScrollPane13.setViewportView(itemTable);            
            typeLabel.setVisible(false);
            typeComboBox.setVisible(false);
            subtypeLabel.setVisible(false);
            subtypeComboBox.setVisible(false);
            shopSortButton.setVisible(false);
            
        } else if (equipCatComboBox.getSelectedItem().toString().equalsIgnoreCase("Armour")) {
            equipmentList = eDAO.getEquipmentByType("Armour");
            Object[][] equipTable = new Object[equipmentList.size()][];
            int i = 0;
            for (Equipment e : equipmentList) {
                equipTable[i] = e.toStringArray();
                i++;
            }
            colNames = new String[]{"Name", "Cost", "Armour Bonus", "Dexterity Bonus", "Armour penality", "Arcane Failure", "Weight", "Armour Type"};
            //colNames = new String[]{"Name", "Cost"};
            itemTable = new javax.swing.JTable(equipTable, colNames);
            jScrollPane13.setViewportView(itemTable);
            typeLabel.setVisible(false);
            typeComboBox.setVisible(false);
            subtypeLabel.setVisible(false);
            subtypeComboBox.setVisible(false);
            shopSortButton.setVisible(false);
            
        } else if (equipCatComboBox.getSelectedItem().toString().equalsIgnoreCase("Weapons")) {
            equipmentList = eDAO.getEquipmentByType("Weapons");
            Object[][] equipTable = new Object[equipmentList.size()][];
            int i = 0;
            for (Equipment e : equipmentList) {
                equipTable[i] = e.toStringArray();
                i++;
            }
            colNames = new String[]{"Name", "Cost", "Type", "SubType", "DmgS", "DmgM", "Critical", "Range", "Weight", "Damage Type", "Special"};
            itemTable = new javax.swing.JTable(equipTable, colNames);
            jScrollPane13.setViewportView(itemTable);
            typeLabel.setVisible(true);
            typeComboBox.setVisible(true);
            subtypeLabel.setVisible(true);
            subtypeComboBox.setVisible(true);
            shopSortButton.setVisible(true);
        }
    }//GEN-LAST:event_equipCatComboBoxItemStateChanged

    private void sellButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellButtonActionPerformed
        if (itemBoughtTableGoods.getModel() != null) {
            if (itemBoughtTableGoods.getSelectedRow() != -1) {
                Equipment boughtItem = goodsBuyingList.get(itemBoughtTableGoods.convertRowIndexToModel(itemBoughtTableGoods.getSelectedRow()));
                int gold = Integer.parseInt(goldTextField.getText());
                if (!boughtItem.getCost().equals("")) {
                    int cost = 0;
                    if (!boughtItem.getCost().equals("-")) {
                        cost = Integer.parseInt(boughtItem.getCost());
                    }
                    goodsBuyingList.remove(boughtItem);
                    boughtTable();
                    String goldLeft = gold + cost + "";
                    goldTextField.setText(goldLeft);
                }
            }
        }
        if (itemBoughtTableWeapons.getModel() != null) {
            if (itemBoughtTableWeapons.getSelectedRow() != -1) {
                Equipment boughtItem = weaponBuyingList.get(itemBoughtTableWeapons.convertRowIndexToModel(itemBoughtTableWeapons.getSelectedRow()));
                int gold = Integer.parseInt(goldTextField.getText());
                if (!boughtItem.getCost().equals("")) {
                    int cost = 0;
                    if (!boughtItem.getCost().equals("-")) {
                        cost = Integer.parseInt(boughtItem.getCost());
                    }
                    weaponBuyingList.remove(boughtItem);
                    boughtTable();
                    String goldLeft = gold + cost + "";
                    goldTextField.setText(goldLeft);
                }
            }
        }
        if (itemBoughtTableArmour.getModel() != null) {
            if (itemBoughtTableArmour.getSelectedRow() != -1) {
                Equipment boughtItem = armourBuyingList.get(itemBoughtTableArmour.convertRowIndexToModel(itemBoughtTableArmour.getSelectedRow()));
                int gold = Integer.parseInt(goldTextField.getText());
                if (!boughtItem.getCost().equals("")) {
                    int cost = 0;
                    if (!boughtItem.getCost().equals("-")) {
                        cost = Integer.parseInt(boughtItem.getCost());
                    }
                    armourBuyingList.remove(boughtItem);
                    boughtTable();
                    String goldLeft = gold + cost + "";
                    goldTextField.setText(goldLeft);
                }
            }
        }
    }//GEN-LAST:event_sellButtonActionPerformed
    Equipment boughtGood = null;
    WeaponEquipment boughtWeapon = null;
    ArmourEquipment boughtArmour = null;
    private void buyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyButtonActionPerformed
        if (itemTable.getSelectedRow() != -1) {
            int itemCost = 0;
            if (equipCatComboBox.getSelectedItem().toString().equalsIgnoreCase("weapons")) {
                boughtWeapon = new WeaponEquipment();
                boughtWeapon = (WeaponEquipment) equipmentList.get(itemTable.convertRowIndexToModel(itemTable.getSelectedRow()));
                if (!boughtWeapon.getCost().equals("") && !boughtWeapon.getCost().equals("-")) {
                    itemCost = Integer.parseInt(boughtWeapon.getCost());
                }
            } else if (equipCatComboBox.getSelectedItem().toString().equalsIgnoreCase("armour")) {
                boughtArmour = new ArmourEquipment();
                boughtArmour = (ArmourEquipment) equipmentList.get(itemTable.convertRowIndexToModel(itemTable.getSelectedRow()));
                if (!boughtArmour.getCost().equals("") && !boughtArmour.getCost().equals("-")) {
                    itemCost = Integer.parseInt(boughtArmour.getCost());
                }
            } else if (equipCatComboBox.getSelectedItem().toString().equalsIgnoreCase("goods")) {
                boughtGood = new Equipment();
                boughtGood = equipmentList.get(itemTable.convertRowIndexToModel(itemTable.getSelectedRow()));
                if (!boughtGood.getCost().equals("") && !boughtGood.getCost().equals("-")) {
                    itemCost = Integer.parseInt(boughtGood.getCost());
                }
            }
            if (goldTextField.getText().equals("")) {
                JOptionPane.showMessageDialog(pathfinderOptionPane, "The gold field is empty");
            } else {
                int gold = Integer.parseInt(goldTextField.getText());
                if ((gold - itemCost) > 0) {
                    if (equipCatComboBox.getSelectedItem().toString().equalsIgnoreCase("weapons")) {
                        if (weaponBuyingList != null) {
                            weaponBuyingList.add(boughtWeapon);
                        } else {
                            weaponBuyingList = new ArrayList();
                            weaponBuyingList.add(boughtWeapon);
                        }
                    } else if (equipCatComboBox.getSelectedItem().toString().equalsIgnoreCase("armour")) {
                        if (armourBuyingList == null) {
                            armourBuyingList = new ArrayList();
                            armourBuyingList.add(boughtArmour);
                        } else {
                            armourBuyingList.add(boughtArmour);
                        }
                    } else if (equipCatComboBox.getSelectedItem().toString().equalsIgnoreCase("goods")) {
                        if (goodsBuyingList == null) {
                            goodsBuyingList = new ArrayList();
                            goodsBuyingList.add(boughtGood);
                        } else {
                            goodsBuyingList.add(boughtGood);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(pathfinderOptionPane, "This item costs too much gold");
                }
                boughtTable();
                String goldLeft = gold - itemCost + "";
                goldTextField.setText(goldLeft);
            }
        }
    }//GEN-LAST:event_buyButtonActionPerformed

    private void shopSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shopSortButtonActionPerformed

        equipmentList = eDAO.getEquipmentTypeAndSubtype(typeComboBox.getSelectedItem().toString(), subtypeComboBox.getSelectedItem().toString());
        Object[][] equipTable = new Object[equipmentList.size()][];
        int i = 0;
        for (Equipment e : equipmentList) {
            equipTable[i] = e.toStringArray();
            i++;
        }
        itemTable = new javax.swing.JTable(equipTable, colNames);
        jScrollPane13.setViewportView(itemTable);
    }//GEN-LAST:event_shopSortButtonActionPerformed

    private void subtypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subtypeComboBoxActionPerformed
        equipmentList = eDAO.getEquipmentBySubType(subtypeComboBox.getSelectedItem().toString());
        Object[][] equipTable = new Object[equipmentList.size()][];
        int i = 0;
        for (Equipment e : equipmentList) {
            equipTable[i] = e.toStringArray();
            i++;
        }
        itemTable = new javax.swing.JTable(equipTable, colNames);
        jScrollPane13.setViewportView(itemTable);
    }//GEN-LAST:event_subtypeComboBoxActionPerformed

    private void typeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeComboBoxActionPerformed
        equipmentList = eDAO.getWeaponEquipmentByType(typeComboBox.getSelectedItem().toString());
        Object[][] equipTable = new Object[equipmentList.size()][];
        int i = 0;
        for (Equipment e : equipmentList) {
            equipTable[i] = e.toStringArray();
            i++;
        }
        itemTable = new javax.swing.JTable(equipTable, colNames);
        jScrollPane13.setViewportView(itemTable);
    }//GEN-LAST:event_typeComboBoxActionPerformed

    private void itemTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemTableMouseClicked

        if (itemTable.getSelectedRow() != -1) {
            System.out.println(itemTable.getValueAt(itemTable.getSelectedRow(), 1).toString());
        }
    }//GEN-LAST:event_itemTableMouseClicked

    private void statButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statButtonActionPerformed
        // TODO add your handling code here:
        int str, dex, intelligence, con, wis, cha;
        Random num1, num2, num3;
        if (choosePlayerRaceComboBox.getSelectedIndex() != -1) {
            Race race = rDAO.getRace(choosePlayerRaceComboBox.getSelectedItem().toString());
            num1 = new Random();
            num2 = new Random();
            num3 = new Random();

            str = ((num1.nextInt(5) + 1) + (num2.nextInt(5) + 1) + (num3.nextInt(5) + 1)) + race.getStr();
            strengthTextField.setText("" + str);
            dex = ((num1.nextInt(5) + 1) + (num2.nextInt(5) + 1) + (num3.nextInt(5) + 1)) + race.getDex();
            dexterityTextField.setText("" + dex);
            intelligence = ((num1.nextInt(5) + 1) + (num2.nextInt(5) + 1) + (num3.nextInt(5) + 1)) + race.getIntelligence();
            intelligenceTextField.setText("" + intelligence);
            con = ((num1.nextInt(5) + 1) + (num2.nextInt(5) + 1) + (num3.nextInt(5) + 1)) + race.getCon();
            constitutionTextField.setText("" + con);
            wis = ((num1.nextInt(5) + 1) + (num2.nextInt(5) + 1) + (num3.nextInt(5) + 1)) + race.getWis();
            wisdomTextField.setText("" + wis);
            cha = ((num1.nextInt(5) + 1) + (num2.nextInt(5) + 1) + (num3.nextInt(5) + 1)) + race.getCha();
            charismaTextField.setText("" + cha);
        }
    }//GEN-LAST:event_statButtonActionPerformed

    private void rNameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rNameButtonActionPerformed
        // TODO add your handling code here:
        if (chooseGenderComboBox.getSelectedIndex() != -1) {
            if (choosePlayerRaceComboBox.getSelectedIndex() != -1) {
                Race race = rDAO.getRace(choosePlayerRaceComboBox.getSelectedItem().toString());
                String[] names = null;
                if (chooseGenderComboBox.getSelectedItem().toString().equalsIgnoreCase("male")) {
                    names = race.getmNamesDesc().split(",");
                } else if (chooseGenderComboBox.getSelectedItem().toString().equalsIgnoreCase("female")) {
                    names = race.getfNamesDesc().split(",");
                }
                int namesLength = names.length;
                if (namesLength > 0) {
                    Random random = new Random();
                    int nameSelected = random.nextInt(namesLength);
                    playerNameTextField.setText(names[nameSelected]);
                }
            }
        }
    }//GEN-LAST:event_rNameButtonActionPerformed

    private void chooseGenderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseGenderComboBoxActionPerformed
        // TODO add your handling code here:
        if (chooseGenderComboBox.getSelectedItem().toString().equalsIgnoreCase("male")) {
            Icon gImage = setPicLabel("..\\RPGProgram\\src\\CharacterCreator\\mGender.jpg");
            characterLabel.setIcon(gImage);
        } else if (chooseGenderComboBox.getSelectedItem().toString().equalsIgnoreCase("female")) {
            Icon gImage = setPicLabel("..\\RPGProgram\\src\\CharacterCreator\\fGender.jpg");
            characterLabel.setIcon(gImage);
        }
    }//GEN-LAST:event_chooseGenderComboBoxActionPerformed

    private void choosePlayerClassComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choosePlayerClassComboBoxActionPerformed
        // TODO add your handling code here:
        String gender = "";
        String race = "";
        String playerClass = "";
        Random random = null;
        int d1, d2, d3, d4, d5;

        if (chooseGenderComboBox.getSelectedIndex() != -1) {
            gender = chooseGenderComboBox.getSelectedItem().toString().substring(0, 1).toLowerCase();
        }

        if (choosePlayerRaceComboBox.getSelectedIndex() != -1) {
            race = choosePlayerRaceComboBox.getSelectedItem().toString().toLowerCase();
        }

        if (choosePlayerClassComboBox.getSelectedIndex() != -1) {
            playerClass = choosePlayerClassComboBox.getSelectedItem().toString().toLowerCase();
            Icon cImage = setPicLabel("..\\RPGProgram\\src\\CharacterCreator\\Race\\" + race + "\\classes\\" + playerClass + "\\" + gender + race + playerClass + ".jpg");
            characterLabel.setIcon(cImage);
            String className = choosePlayerClassComboBox.getSelectedItem().toString().toLowerCase();
            int gold = 0;
            random = new Random();
            switch (className) {
                case "barbarian":
                    gold = ((d1 = random.nextInt(5) + 1) + (d2 = random.nextInt(5) + 1) + (d1 = random.nextInt(5) + 1)) * 10;
                    goldTextField.setText("" + gold);
                    break;
                case "bard":
                    gold = ((d1 = random.nextInt(5) + 1) + (d2 = random.nextInt(5) + 1) + (d1 = random.nextInt(5) + 1)) * 10;
                    goldTextField.setText("" + gold);
                    spellList = new ArrayList();
                    spellList = spDAO.getAllSpellsByClass("bard");
                    ArrayList<String> schoolList = spDAO.getAllSpellSchools(choosePlayerClassComboBox.getSelectedItem().toString().toLowerCase());
                    spellSchoolComboBox.setModel(new DefaultComboBoxModel(schoolList.toArray()));
                    ArrayList<Integer> levelList = spDAO.getAllSpellslevels(choosePlayerClassComboBox.getSelectedItem().toString().toLowerCase());
                    levelComboBox.setModel(new DefaultComboBoxModel(levelList.toArray()));
                    Object[][] spellListTable = new Object[spellList.size()][];
                    int i = 0;
                        for (Spells e : spellList) {
                            spellListTable[i] = e.toStringArray();
                            i++;
                        }
                    spellTable = new javax.swing.JTable(spellListTable, colNames);
                    jScrollPane18.setViewportView(spellTable);
                    break;
                case "cleric":
                    gold = ((d1 = random.nextInt(5) + 1) + (d2 = random.nextInt(5) + 1) + (d3 = random.nextInt(5) + 1) + (d4 = random.nextInt(5) + 1)) * 10;
                    goldTextField.setText("" + gold);
                    spellList = new ArrayList();
                    spellList = spDAO.getAllSpellsByClass("cleric");
                    break;
                case "druid":
                    gold = ((d1 = random.nextInt(5) + 1) + (d2 = random.nextInt(5) + 1)) * 10;
                    goldTextField.setText("" + gold);
                    spellList = new ArrayList();
                    spellList = spDAO.getAllSpellsByClass("druid");
                    break;
                case "fighter":
                    gold = ((d1 = random.nextInt(5) + 1) + (d2 = random.nextInt(5) + 1) + (d3 = random.nextInt(5) + 1) + (d4 = random.nextInt(5) + 1) + (d5 = random.nextInt(5) + 1)) * 10;
                    goldTextField.setText("" + gold);
                    break;
                case "monk":
                    gold = (d1 = random.nextInt(5) + 1) * 10;
                    goldTextField.setText("" + gold);
                    break;
                case "paladin":
                    gold = ((d1 = random.nextInt(5) + 1) + (d2 = random.nextInt(5) + 1) + (d3 = random.nextInt(5) + 1) + (d4 = random.nextInt(5) + 1) + (d5 = random.nextInt(5) + 1)) * 10;
                    goldTextField.setText("" + gold);
                    break;
                case "ranger":
                    gold = ((d1 = random.nextInt(5) + 1) + (d2 = random.nextInt(5) + 1) + (d3 = random.nextInt(5) + 1) + (d4 = random.nextInt(5) + 1) + (d5 = random.nextInt(5) + 1)) * 10;
                    goldTextField.setText("" + gold);
                    break;
                case "rogue":
                    gold = ((d1 = random.nextInt(5) + 1) + (d2 = random.nextInt(5) + 1) + (d3 = random.nextInt(5) + 1) + (d4 = random.nextInt(5) + 1)) * 10;
                    goldTextField.setText("" + gold);
                    break;
                case "sorcerer":
                    gold = ((d1 = random.nextInt(5) + 1) + (d2 = random.nextInt(5) + 1)) * 10;
                    goldTextField.setText("" + gold);
                    spellList = new ArrayList();
                    spellList = spDAO.getAllSpellsByClass("sorcerer");
                    break;
                case "wizard":
                    gold = ((d1 = random.nextInt(5) + 1) + (d2 = random.nextInt(5) + 1)) * 10;
                    goldTextField.setText("" + gold);
                    spellList = new ArrayList();
                    spellList = spDAO.getAllSpellsByClass("wizard");
                    break;
            }
        }
    }//GEN-LAST:event_choosePlayerClassComboBoxActionPerformed

    private void choosePlayerRaceComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choosePlayerRaceComboBoxActionPerformed
        // TODO add your handling code here:
        String gender = "";
        if (chooseGenderComboBox.getSelectedIndex() != -1) {
            gender = chooseGenderComboBox.getSelectedItem().toString().substring(0, 1).toLowerCase();
        }

        if (choosePlayerRaceComboBox.getSelectedIndex() != -1) {
            String race = choosePlayerRaceComboBox.getSelectedItem().toString().toLowerCase();
            Icon rImage = setPicLabel("..\\RPGProgram\\src\\CharacterCreator\\Race\\" + race + "\\" + gender + race + ".jpg");
            characterLabel.setIcon(rImage);
            if (race.contains("half-elves") || race.contains("human") || race.contains("half-orcs")) {
                JOptionPane.showMessageDialog(null, "You have selected a a race that may choose where to apply its racial bonus");
            }
        }
    }//GEN-LAST:event_choosePlayerRaceComboBoxActionPerformed

    private void spellSchoolComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_spellSchoolComboBoxItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_spellSchoolComboBoxItemStateChanged

    private void spellSchoolComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spellSchoolComboBoxActionPerformed

    }//GEN-LAST:event_spellSchoolComboBoxActionPerformed

    private void levelComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_levelComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_levelComboBoxActionPerformed

    private void spellSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spellSortButtonActionPerformed
        spellList = new ArrayList();
        spellList = spDAO.getAllSpellsByClassSchoolLevel(choosePlayerClassComboBox.getSelectedItem().toString().toLowerCase(), spellSchoolComboBox.getSelectedItem().toString().toLowerCase(), Integer.parseInt(levelComboBox.getSelectedItem().toString()));
        Object[][] spellListTable = new Object[spellList.size()][];
                    int i = 0;
                        for (Spells e : spellList) {
                            spellListTable[i] = e.toStringArray();
                            i++;
                        }
                        
        spellTable = new javax.swing.JTable(spellListTable, colNames);
        jScrollPane18.setViewportView(spellTable);
    }//GEN-LAST:event_spellSortButtonActionPerformed

    private void selectedSpellTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectedSpellTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_selectedSpellTableMouseClicked

    private void spellTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_spellTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_spellTableMouseClicked
    private String[] colNames = {"Name", "Cost"};

    private void boughtTable() {
        Object[][] weaponBoughtTable = null;
        Object[][] armourBoughtTable = null;
        Object[][] goodsBoughtTable = null;

        if (weaponBuyingList != null) {
            weaponBoughtTable = new Object[weaponBuyingList.size()][];
        }
        if (armourBuyingList != null) {
            armourBoughtTable = new Object[armourBuyingList.size()][];
        }
        if (goodsBuyingList != null) {
            goodsBoughtTable = new Object[goodsBuyingList.size()][];
        }
        int i = 0;
        if (goodsBuyingList != null && goodsBuyingList.size() > 0) {
            for (Equipment e : goodsBuyingList) {
                goodsBoughtTable[i] = e.toStringArray();
                i++;
            }
        }
        i = 0;
        if (weaponBuyingList != null && weaponBuyingList.size() > 0) {
            for (WeaponEquipment e : weaponBuyingList) {
                weaponBoughtTable[i] = e.toStringArray();
                i++;
            }
        }
        i = 0;
        if (armourBuyingList != null && armourBuyingList.size() > 0) {
            for (ArmourEquipment e : armourBuyingList) {
                armourBoughtTable[i] = e.toStringArray();
                i++;
            }
        }
        if (equipCatComboBox.getSelectedItem().toString().equalsIgnoreCase("Weapons")) {
            colNames = new String[]{"Name", "Cost"};
            itemBoughtTableWeapons = new javax.swing.JTable(weaponBoughtTable, colNames);
            jScrollPane15.setViewportView(itemBoughtTableWeapons);
        } else if (equipCatComboBox.getSelectedItem().toString().equalsIgnoreCase("Armour")) {
            colNames = new String[]{"Name", "Cost"};
            itemBoughtTableArmour = new javax.swing.JTable(armourBoughtTable, colNames);
            jScrollPane16.setViewportView(itemBoughtTableArmour);
        } else if (equipCatComboBox.getSelectedItem().toString().equalsIgnoreCase("Goods")) {
            colNames = new String[]{"Name", "Cost"};
            itemBoughtTableGoods = new javax.swing.JTable(goodsBoughtTable, colNames);
            jScrollPane14.setViewportView(itemBoughtTableGoods);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RPGGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RPGGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RPGGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RPGGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RPGGUI().setVisible(true);
            }
        });

    }

    public Icon setPicLabel(String picLink) {
        try {
            BufferedImage img = null;
            img = ImageIO.read(new File(picLink));
            BufferedImage resizedImage = new BufferedImage(200, 300, img.getType());
            Graphics2D g = resizedImage.createGraphics();
            g.drawImage(img, 0, 0, 200, 300, null);
            g.dispose();

            Icon newImage = new ImageIcon(resizedImage);

            return newImage;

        } catch (IOException e) {
            e.printStackTrace();
        }
        return null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addSpellButton;
    private javax.swing.JTextArea adventurerDescArea;
    private javax.swing.JLabel adventurerDescLabel;
    private javax.swing.JLabel alignReligLabel;
    private javax.swing.JTextArea alignmentReligionDescArea;
    private javax.swing.JButton buyButton;
    private javax.swing.JScrollPane characterCreationPane;
    private javax.swing.JPanel characterCreationPanel;
    private javax.swing.JLabel characterLabel;
    private javax.swing.JTextField charismaTextField;
    private javax.swing.JComboBox chooseGenderComboBox;
    private javax.swing.JLabel chooseGenderLabel;
    private javax.swing.JComboBox choosePlayerClassComboBox;
    private javax.swing.JLabel choosePlayerClassLabel;
    private javax.swing.JComboBox choosePlayerRaceComboBox;
    private javax.swing.JLabel choosePlayerRaceLabel;
    private javax.swing.JLabel chooseRaceLabel;
    private javax.swing.JLabel classAlignLabel;
    private javax.swing.JTextField classAlignmentField;
    private javax.swing.JLabel classChoiceLabel;
    private javax.swing.JTextArea classDescArea;
    private javax.swing.JButton classFeaturesBttn;
    private javax.swing.JTextField classHitField;
    private javax.swing.JLabel classHitLabel;
    private javax.swing.JScrollPane classPane;
    private javax.swing.JTextArea classRoleArea;
    private javax.swing.JLabel classRoleLabel;
    private javax.swing.JComboBox classSelectBox;
    private javax.swing.JTextArea classSkillsArea;
    private javax.swing.JLabel classSkillsLabel;
    private javax.swing.JTextField constitutionTextField;
    private javax.swing.JTextField dexterityTextField;
    private javax.swing.JComboBox equipCatComboBox;
    private javax.swing.JLabel equipShopLabel;
    private javax.swing.JLabel equipShopLabel1;
    private javax.swing.JLabel fNameDescLabel;
    private javax.swing.JTextField fNameTextField;
    private javax.swing.JLabel fPicLabel;
    private javax.swing.JLabel goldLabel;
    private javax.swing.JTextField goldTextField;
    private javax.swing.JTextField intelligenceTextField;
    private javax.swing.JTable itemBoughtTableArmour;
    private javax.swing.JTable itemBoughtTableGoods;
    private javax.swing.JTable itemBoughtTableWeapons;
    private javax.swing.JTable itemTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JComboBox levelComboBox;
    private javax.swing.JLabel mNameDescLabel;
    private javax.swing.JTextField mNameTextField;
    private javax.swing.JLabel mPicLabel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JPanel pathfinderClassPane;
    private javax.swing.JTabbedPane pathfinderOptionPane;
    private javax.swing.JScrollPane pathfinderPane;
    private javax.swing.JPanel pathfinderRacePanel;
    private javax.swing.JLabel physDescLabel;
    private javax.swing.JTextArea physicalDescArea;
    private javax.swing.JTextField playerNameTextField;
    private javax.swing.JButton rNameButton;
    private javax.swing.JTextArea raceDescArea;
    private javax.swing.JLabel raceDescLabel;
    private javax.swing.JScrollPane racePane;
    private javax.swing.JLabel racePicLabel;
    private javax.swing.JComboBox raceSelectBox;
    private javax.swing.JTextArea raceSkillsArea;
    private javax.swing.JLabel raceSkillsLabel;
    private javax.swing.JTextArea relationsDescArea;
    private javax.swing.JLabel relationsDescLabel;
    private javax.swing.JButton removeSpellButton;
    private javax.swing.JInternalFrame rpgFrame;
    private javax.swing.JTabbedPane rpgOptionPane;
    private javax.swing.JTable selectedSpellTable;
    private javax.swing.JLabel selectedSpellsLabel;
    private javax.swing.JButton sellButton;
    private javax.swing.JButton shopSortButton;
    private javax.swing.JTextArea societyDescArea;
    private javax.swing.JComboBox spellSchoolComboBox;
    private javax.swing.JButton spellSortButton;
    private javax.swing.JTable spellTable;
    private javax.swing.JButton statButton;
    private javax.swing.JLabel statsLabel;
    private javax.swing.JTextField strengthTextField;
    private javax.swing.JComboBox subtypeComboBox;
    private javax.swing.JLabel subtypeLabel;
    private javax.swing.JLabel subtypeLabel1;
    private javax.swing.JLabel subtypeLabel2;
    private javax.swing.JLabel subtypeLabel3;
    private javax.swing.JComboBox typeComboBox;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JLabel typeLabel1;
    private javax.swing.JTextField wisdomTextField;
    // End of variables declaration//GEN-END:variables
}
